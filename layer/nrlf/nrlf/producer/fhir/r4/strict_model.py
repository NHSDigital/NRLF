# generated by datamodel-codegen:
#   filename:  producer.yaml
#   timestamp: 2022-10-28T09:34:51+00:00

from __future__ import annotations

from typing import Annotated, List, Optional

from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing_extensions import Literal


class DocumentId(BaseModel):
    __root__: StrictStr


class RequestPathParams(BaseModel):
    id: DocumentId


class RequestQuerySubject(BaseModel):
    __root__: StrictStr


class RequestQueryCustodian(BaseModel):
    __root__: StrictStr


class RequestQuerySnomedCode(BaseModel):
    __root__: StrictStr


class RequestHeaderFromASID(BaseModel):
    __root__: StrictStr


class RequestHeaderToASID(BaseModel):
    __root__: StrictStr


class LocationItem(BaseModel):
    __root__: Annotated[
        StrictStr,
        Field(
            description='This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be "http." + the parameter name.'
        ),
    ]


class ExpressionItem(BaseModel):
    __root__: Annotated[
        StrictStr,
        Field(
            description="A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised."
        ),
    ]


class LineItem(BaseModel):
    __root__: Annotated[
        StrictStr,
        Field(
            description="This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information."
        ),
    ]


class GivenItem(BaseModel):
    __root__: Annotated[StrictStr, Field(description="Given name.")]


class PrefixItem(BaseModel):
    __root__: Annotated[
        StrictStr,
        Field(
            description="Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name."
        ),
    ]


class SuffixItem(BaseModel):
    __root__: Annotated[
        StrictStr,
        Field(
            description="Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name."
        ),
    ]


class EventItem(BaseModel):
    __root__: Annotated[
        StrictStr, Field(description="Identifies specific times when the event occurs.")
    ]


class DayOfWeekItem(BaseModel):
    __root__: Annotated[
        StrictStr,
        Field(
            description="If one or more days of week is provided, then the action happens only on the specified day(s)."
        ),
    ]


class TimeOfDayItem(BaseModel):
    __root__: Annotated[
        StrictStr, Field(description="Specified time of day for action to take place.")
    ]


class WhenItem(BaseModel):
    __root__: Annotated[
        StrictStr,
        Field(
            description="An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
        ),
    ]


class ProfileItem(BaseModel):
    __root__: Annotated[
        StrictStr,
        Field(
            description="A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
        ),
    ]


class RequestHeader(BaseModel):
    fromASID: RequestHeaderFromASID
    toASID: RequestHeaderToASID


class RequestParams(BaseModel):
    subject: RequestQuerySubject
    custodian_identifier: Annotated[
        Optional[RequestQueryCustodian], Field(alias="custodian.identifier")
    ] = None
    snomed_identifier: Annotated[
        Optional[RequestQuerySnomedCode], Field(alias="snomed.identifier")
    ] = None


class Resource(BaseModel):
    resourceType: Literal[
        "Resource",
        "DomainResource",
        "Account",
        "ActivityDefinition",
        "AdverseEvent",
        "AllergyIntolerance",
        "Appointment",
        "AppointmentResponse",
        "AuditEvent",
        "Basic",
        "Binary",
        "BiologicallyDerivedProduct",
        "BodyStructure",
        "Bundle",
        "CapabilityStatement",
        "CarePlan",
        "CareTeam",
        "CatalogEntry",
        "ChargeItem",
        "ChargeItemDefinition",
        "Claim",
        "ClaimResponse",
        "ClinicalImpression",
        "CodeSystem",
        "Communication",
        "CommunicationRequest",
        "CompartmentDefinition",
        "Composition",
        "ConceptMap",
        "Condition",
        "Consent",
        "Contract",
        "Coverage",
        "CoverageEligibilityRequest",
        "CoverageEligibilityResponse",
        "DetectedIssue",
        "Device",
        "DeviceDefinition",
        "DeviceMetric",
        "DeviceRequest",
        "DeviceUseStatement",
        "DiagnosticReport",
        "DocumentManifest",
        "DocumentReference",
        "EffectEvidenceSynthesis",
        "Encounter",
        "Endpoint",
        "EnrollmentRequest",
        "EnrollmentResponse",
        "EpisodeOfCare",
        "EventDefinition",
        "Evidence",
        "EvidenceVariable",
        "ExampleScenario",
        "ExplanationOfBenefit",
        "FamilyMemberHistory",
        "Flag",
        "Goal",
        "GraphDefinition",
        "Group",
        "GuidanceResponse",
        "HealthcareService",
        "ImagingStudy",
        "Immunization",
        "ImmunizationEvaluation",
        "ImmunizationRecommendation",
        "ImplementationGuide",
        "InsurancePlan",
        "Invoice",
        "Library",
        "Linkage",
        "List",
        "Location",
        "Measure",
        "MeasureReport",
        "Media",
        "Medication",
        "MedicationAdministration",
        "MedicationDispense",
        "MedicationKnowledge",
        "MedicationRequest",
        "MedicationStatement",
        "MedicinalProduct",
        "MedicinalProductAuthorization",
        "MedicinalProductContraindication",
        "MedicinalProductIndication",
        "MedicinalProductIngredient",
        "MedicinalProductInteraction",
        "MedicinalProductManufactured",
        "MedicinalProductPackaged",
        "MedicinalProductPharmaceutical",
        "MedicinalProductUndesirableEffect",
        "MessageDefinition",
        "MessageHeader",
        "MolecularSequence",
        "NamingSystem",
        "NutritionOrder",
        "Observation",
        "ObservationDefinition",
        "OperationDefinition",
        "OperationOutcome",
        "Organization",
        "OrganizationAffiliation",
        "Parameters",
        "Patient",
        "PaymentNotice",
        "PaymentReconciliation",
        "Person",
        "PlanDefinition",
        "Practitioner",
        "PractitionerRole",
        "Procedure",
        "Provenance",
        "Questionnaire",
        "QuestionnaireResponse",
        "RelatedPerson",
        "RequestGroup",
        "ResearchDefinition",
        "ResearchElementDefinition",
        "ResearchStudy",
        "ResearchSubject",
        "RiskAssessment",
        "RiskEvidenceSynthesis",
        "Schedule",
        "SearchParameter",
        "ServiceRequest",
        "Slot",
        "Specimen",
        "SpecimenDefinition",
        "StructureDefinition",
        "StructureMap",
        "Subscription",
        "Substance",
        "SubstanceNucleicAcid",
        "SubstancePolymer",
        "SubstanceProtein",
        "SubstanceReferenceInformation",
        "SubstanceSourceMaterial",
        "SubstanceSpecification",
        "SupplyDelivery",
        "SupplyRequest",
        "Task",
        "TerminologyCapabilities",
        "TestReport",
        "TestScript",
        "ValueSet",
        "VerificationResult",
        "VisionPrescription",
    ]
    id: Annotated[
        Optional[StrictStr],
        Field(
            description="The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
        ),
    ] = None
    meta: Annotated[
        Optional[Meta],
        Field(
            description="The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
        ),
    ] = None
    implicitRules: Annotated[
        Optional[StrictStr],
        Field(
            description="A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
        ),
    ] = None
    language: Annotated[
        Optional[StrictStr],
        Field(description="The base language in which the resource is written."),
    ] = None


class Element(BaseModel):
    id: Annotated[
        Optional[StrictStr],
        Field(
            description="Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
        ),
    ] = None
    extension: Annotated[
        Optional[List[Extension]],
        Field(example=[{"url": "http://example.com", "valueString": "text value"}]),
    ] = None


class DomainResource(Resource):
    text: Annotated[
        Optional[Narrative],
        Field(
            description='A human&ndash;readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.'
        ),
    ] = None
    contained: Optional[List[Resource]] = None
    extension: Optional[List[Extension]] = None
    modifierExtension: Optional[List[Extension]] = None


class Bundle(Resource):
    identifier: Annotated[
        Optional[Identifier],
        Field(
            description="A persistent identifier for the bundle that won't change as a bundle is copied from server to server."
        ),
    ] = None
    type: Annotated[
        StrictStr,
        Field(
            description="Indicates the purpose of this bundle &ndash; how it is intended to be used."
        ),
    ]
    timestamp: Annotated[
        Optional[StrictStr],
        Field(
            description="The date/time that the bundle was assembled &ndash; i.e. when the resources were placed in the bundle."
        ),
    ] = None
    total: Annotated[
        Optional[StrictInt],
        Field(
            description="If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle."
        ),
    ] = None
    link: Optional[List[BundleLink]] = None
    entry: Optional[List[BundleEntry]] = None
    signature: Annotated[
        Optional[Signature],
        Field(
            description="Digital Signature &ndash; base64 encoded. XML&ndash;DSig or a JWT."
        ),
    ] = None


class BackboneElement(Element):
    modifierExtension: Optional[List[Extension]] = None


class Address(Element):
    use: Annotated[
        Optional[StrictStr], Field(description="The purpose of this address.")
    ] = None
    type: Annotated[
        Optional[StrictStr],
        Field(
            description="Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care&ndash;of addresses). Most addresses are both."
        ),
    ] = None
    text: Annotated[
        Optional[StrictStr],
        Field(
            description="Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
        ),
    ] = None
    line: Optional[List[LineItem]] = None
    city: Annotated[
        Optional[StrictStr],
        Field(
            description="The name of the city, town, suburb, village or other community or delivery center."
        ),
    ] = None
    district: Annotated[
        Optional[StrictStr],
        Field(description="The name of the administrative area (county)."),
    ] = None
    state: Annotated[
        Optional[StrictStr],
        Field(
            description="Sub&ndash;unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
        ),
    ] = None
    postalCode: Annotated[
        Optional[StrictStr],
        Field(
            description="A postal code designating a region defined by the postal service."
        ),
    ] = None
    country: Annotated[
        Optional[StrictStr],
        Field(
            description="Country &ndash; a nation as commonly understood or generally accepted."
        ),
    ] = None
    period: Annotated[
        Optional[Period], Field(description="Time period when address was/is in use.")
    ] = None


class Annotation(Element):
    authorReference: Annotated[
        Optional[Reference],
        Field(description="The individual responsible for making the annotation."),
    ] = None
    authorString: Annotated[
        Optional[StrictStr],
        Field(description="The individual responsible for making the annotation."),
    ] = None
    time: Annotated[
        Optional[StrictStr],
        Field(description="Indicates when this particular annotation was made."),
    ] = None
    text: Annotated[
        StrictStr, Field(description="The text of the annotation in markdown format.")
    ]


class Attachment(Element):
    contentType: Annotated[
        Optional[StrictStr],
        Field(
            description="Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
        ),
    ] = None
    language: Annotated[
        Optional[StrictStr],
        Field(
            description="The human language of the content. The value can be any valid value according to BCP 47."
        ),
    ] = None
    data: Annotated[
        Optional[StrictStr],
        Field(
            description="The actual data of the attachment &ndash; a sequence of bytes, base64 encoded."
        ),
    ] = None
    url: Annotated[
        Optional[StrictStr],
        Field(description="A location where the data can be accessed."),
    ] = None
    size: Annotated[
        Optional[StrictInt],
        Field(
            description="The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
        ),
    ] = None
    hash: Annotated[
        Optional[StrictStr],
        Field(
            description="The calculated hash of the data using SHA&ndash;1. Represented using base64."
        ),
    ] = None
    title: Annotated[
        Optional[StrictStr],
        Field(description="A label or set of text to display in place of the data."),
    ] = None
    creation: Annotated[
        Optional[StrictStr],
        Field(description="The date that the attachment was first created."),
    ] = None


class CodeableConcept(Element):
    coding: Optional[List[Coding]] = None
    text: Annotated[
        Optional[StrictStr],
        Field(
            description="A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
        ),
    ] = None


class Coding(Element):
    system: Annotated[
        Optional[StrictStr],
        Field(
            description="The identification of the code system that defines the meaning of the symbol in the code."
        ),
    ] = None
    version: Annotated[
        Optional[StrictStr],
        Field(
            description="The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
        ),
    ] = None
    code: Annotated[
        Optional[StrictStr],
        Field(
            description="A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
        ),
    ] = None
    display: Annotated[
        Optional[StrictStr],
        Field(
            description="A representation of the meaning of the code in the system, following the rules of the system."
        ),
    ] = None
    userSelected: Annotated[
        Optional[StrictBool],
        Field(
            description="Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
        ),
    ] = None


class ContactPoint(Element):
    system: Annotated[
        Optional[StrictStr],
        Field(
            description="Telecommunications form for contact point &ndash; what communications system is required to make use of the contact."
        ),
    ] = None
    value: Annotated[
        Optional[StrictStr],
        Field(
            description="The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
        ),
    ] = None
    use: Annotated[
        Optional[StrictStr],
        Field(description="Identifies the purpose for the contact point."),
    ] = None
    rank: Annotated[
        Optional[StrictInt],
        Field(
            description="Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
        ),
    ] = None
    period: Annotated[
        Optional[Period],
        Field(description="Time period when the contact point was/is in use."),
    ] = None


class HumanName(Element):
    use: Annotated[
        Optional[StrictStr], Field(description="Identifies the purpose for this name.")
    ] = None
    text: Annotated[
        Optional[StrictStr],
        Field(
            description="Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
        ),
    ] = None
    family: Annotated[
        Optional[StrictStr],
        Field(
            description="The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
        ),
    ] = None
    given: Optional[List[GivenItem]] = None
    prefix: Optional[List[PrefixItem]] = None
    suffix: Optional[List[SuffixItem]] = None
    period: Annotated[
        Optional[Period],
        Field(
            description="Indicates the period of time when this name was valid for the named person."
        ),
    ] = None


class Identifier(Element):
    use: Annotated[
        Optional[StrictStr], Field(description="The purpose of this identifier.")
    ] = None
    type: Annotated[
        Optional[CodeableConcept],
        Field(
            description="A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
        ),
    ] = None
    system: Annotated[
        Optional[StrictStr],
        Field(
            description="Establishes the namespace for the value &ndash; that is, a URL that describes a set values that are unique."
        ),
    ] = None
    value: Annotated[
        Optional[StrictStr],
        Field(
            description="The portion of the identifier typically relevant to the user and which is unique within the context of the system."
        ),
    ] = None
    period: Annotated[
        Optional[Period],
        Field(description="Time period during which identifier is/was valid for use."),
    ] = None
    assigner: Annotated[
        Optional[Reference],
        Field(
            description="Organization that issued/manages the identifier.",
            example={
                "reference": "Organization/123",
                "type": "Organization",
                "display": "The Assigning Organization",
            },
        ),
    ] = None


class Money(Element):
    value: Annotated[
        Optional[StrictFloat],
        Field(description="Numerical value (with implicit precision)."),
    ] = None
    currency: Annotated[
        Optional[StrictStr], Field(description="ISO 4217 Currency Code.")
    ] = None


class Period(Element):
    start: Annotated[
        Optional[StrictStr],
        Field(description="The start of the period. The boundary is inclusive."),
    ] = None
    end: Annotated[
        Optional[StrictStr],
        Field(
            description="The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
        ),
    ] = None


class Quantity(Element):
    value: Annotated[
        Optional[StrictFloat],
        Field(
            description="The value of the measured amount. The value includes an implicit precision in the presentation of the value."
        ),
    ] = None
    comparator: Annotated[
        Optional[StrictStr],
        Field(
            description='How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.'
        ),
    ] = None
    unit: Annotated[
        Optional[StrictStr],
        Field(description="A human&ndash;readable form of the unit."),
    ] = None
    system: Annotated[
        Optional[StrictStr],
        Field(
            description="The identification of the system that provides the coded form of the unit."
        ),
    ] = None
    code: Annotated[
        Optional[StrictStr],
        Field(
            description="A computer processable form of the unit in some unit representation system."
        ),
    ] = None


class Range(Element):
    low: Annotated[
        Optional[SimpleQuantity],
        Field(description="The low limit. The boundary is inclusive."),
    ] = None
    high: Annotated[
        Optional[SimpleQuantity],
        Field(description="The high limit. The boundary is inclusive."),
    ] = None


class Ratio(Element):
    numerator: Annotated[
        Optional[Quantity], Field(description="The value of the numerator.")
    ] = None
    denominator: Annotated[
        Optional[Quantity], Field(description="The value of the denominator.")
    ] = None


class Reference(Element):
    reference: Annotated[
        Optional[StrictStr],
        Field(
            description="A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
        ),
    ] = None
    type: Annotated[
        Optional[StrictStr],
        Field(
            description='The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. "Patient" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).'
        ),
    ] = None
    identifier: Annotated[
        Optional[Identifier],
        Field(
            description="An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
        ),
    ] = None
    display: Annotated[
        Optional[StrictStr],
        Field(
            description="Plain text narrative that identifies the resource in addition to the resource reference."
        ),
    ] = None


class SampledData(Element):
    origin: Annotated[
        SimpleQuantity,
        Field(
            description="The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
        ),
    ]
    period: Annotated[
        StrictFloat,
        Field(
            description="The length of time between sampling times, measured in milliseconds."
        ),
    ]
    factor: Annotated[
        Optional[StrictFloat],
        Field(
            description="A correction factor that is applied to the sampled data points before they are added to the origin."
        ),
    ] = None
    lowerLimit: Annotated[
        Optional[StrictFloat],
        Field(
            description='The lower limit of detection of the measured points. This is needed if any of the data points have the value "L" (lower than detection limit).'
        ),
    ] = None
    upperLimit: Annotated[
        Optional[StrictFloat],
        Field(
            description='The upper limit of detection of the measured points. This is needed if any of the data points have the value "U" (higher than detection limit).'
        ),
    ] = None
    dimensions: Annotated[
        StrictInt,
        Field(
            description="The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced &ndash; all the sample points for a point in time will be recorded at once."
        ),
    ]
    data: Annotated[
        Optional[StrictStr],
        Field(
            description='A series of data points which are decimal values separated by a single space (character u20). The special values "E" (error), "L" (below detection limit) and "U" (above detection limit) can also be used in place of a decimal value.'
        ),
    ] = None


class Signature(Element):
    type: Annotated[List[Coding], Field(min_items=1)]
    when: Annotated[
        StrictStr, Field(description="When the digital signature was signed.")
    ]
    who: Annotated[
        Reference,
        Field(
            description="A reference to an application&ndash;usable description of the identity that signed  (e.g. the signature used their private key)."
        ),
    ]
    onBehalfOf: Annotated[
        Optional[Reference],
        Field(
            description="A reference to an application&ndash;usable description of the identity that is represented by the signature."
        ),
    ] = None
    targetFormat: Annotated[
        Optional[StrictStr],
        Field(
            description="A mime type that indicates the technical format of the target resources signed by the signature."
        ),
    ] = None
    sigFormat: Annotated[
        Optional[StrictStr],
        Field(
            description="A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
        ),
    ] = None
    data: Annotated[
        Optional[StrictStr],
        Field(
            description="The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
        ),
    ] = None


class ContactDetail(Element):
    name: Annotated[
        Optional[StrictStr], Field(description="The name of an individual to contact.")
    ] = None
    telecom: Optional[List[ContactPoint]] = None


class RelatedArtifact(Element):
    type: Annotated[
        StrictStr,
        Field(description="The type of relationship to the related artifact."),
    ]
    label: Annotated[
        Optional[StrictStr],
        Field(
            description="A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
        ),
    ] = None
    display: Annotated[
        Optional[StrictStr],
        Field(
            description="A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
        ),
    ] = None
    citation: Annotated[
        Optional[StrictStr],
        Field(
            description="A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
        ),
    ] = None
    url: Annotated[
        Optional[StrictStr],
        Field(
            description="A url for the artifact that can be followed to access the actual content."
        ),
    ] = None
    document: Annotated[
        Optional[Attachment],
        Field(
            description="The document being referenced, represented as an attachment. This is exclusive with the resource element."
        ),
    ] = None
    resource: Annotated[
        Optional[StrictStr],
        Field(
            description="The related resource, such as a library, value set, profile, or other knowledge resource."
        ),
    ] = None


class UsageContext(Element):
    code: Annotated[
        Coding,
        Field(
            description="A code that identifies the type of context being specified by this usage context."
        ),
    ]
    valueCodeableConcept: Annotated[
        Optional[CodeableConcept],
        Field(
            description="A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
        ),
    ] = None
    valueQuantity: Annotated[
        Optional[Quantity],
        Field(
            description="A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
        ),
    ] = None
    valueRange: Annotated[
        Optional[Range],
        Field(
            description="A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
        ),
    ] = None
    valueReference: Annotated[
        Optional[Reference],
        Field(
            description="A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
        ),
    ] = None


class Meta(Element):
    versionId: Annotated[
        Optional[StrictStr],
        Field(
            description="The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
        ),
    ] = None
    lastUpdated: Annotated[
        Optional[StrictStr],
        Field(
            description="When the resource last changed &ndash; e.g. when the version changed."
        ),
    ] = None
    source: Annotated[
        Optional[StrictStr],
        Field(
            description="A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
        ),
    ] = None
    profile: Optional[List[ProfileItem]] = None
    security: Optional[List[Coding]] = None
    tag: Optional[List[Coding]] = None


class Narrative(Element):
    status: Annotated[
        StrictStr,
        Field(
            description="The status of the narrative &ndash; whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
        ),
    ]
    div: Annotated[
        StrictStr,
        Field(
            description="The actual narrative content, a stripped down version of XHTML."
        ),
    ]


class Extension(Element):
    url: Annotated[
        StrictStr,
        Field(
            description="Source of the definition for the extension code &ndash; a logical name or a URL."
        ),
    ]
    valueBase64Binary: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueBoolean: Annotated[
        Optional[StrictBool],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueCanonical: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueCode: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueDate: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueDateTime: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueDecimal: Annotated[
        Optional[StrictFloat],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueId: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueInstant: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueInteger: Annotated[
        Optional[StrictInt],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueMarkdown: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueOid: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valuePositiveInt: Annotated[
        Optional[StrictInt],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueString: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueTime: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueUnsignedInt: Annotated[
        Optional[StrictInt],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueUri: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueUrl: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueUuid: Annotated[
        Optional[StrictStr],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueAddress: Annotated[
        Optional[Address],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueAge: Annotated[
        Optional[Age],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueAnnotation: Annotated[
        Optional[Annotation],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueAttachment: Annotated[
        Optional[Attachment],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueCodeableConcept: Annotated[
        Optional[CodeableConcept],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueCoding: Annotated[
        Optional[Coding],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueContactPoint: Annotated[
        Optional[ContactPoint],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueCount: Annotated[
        Optional[Count],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueDistance: Annotated[
        Optional[Distance],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueDuration: Annotated[
        Optional[Duration],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueHumanName: Annotated[
        Optional[HumanName],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueIdentifier: Annotated[
        Optional[Identifier],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueMoney: Annotated[
        Optional[Money],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valuePeriod: Annotated[
        Optional[Period],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueQuantity: Annotated[
        Optional[Quantity],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueRange: Annotated[
        Optional[Range],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueRatio: Annotated[
        Optional[Ratio],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueReference: Annotated[
        Optional[Reference],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueSampledData: Annotated[
        Optional[SampledData],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueSignature: Annotated[
        Optional[Signature],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueTiming: Annotated[
        Optional[Timing],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueContactDetail: Annotated[
        Optional[ContactDetail],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueRelatedArtifact: Annotated[
        Optional[RelatedArtifact],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueUsageContext: Annotated[
        Optional[UsageContext],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None
    valueMeta: Annotated[
        Optional[Meta],
        Field(
            description="Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
        ),
    ] = None


class DocumentReference(DomainResource):
    masterIdentifier: Annotated[
        Optional[Identifier],
        Field(
            description="Document identifier as assigned by the source of the document. This identifier is specific to this version of the document. This unique identifier may be used elsewhere to identify this version of the document."
        ),
    ] = None
    identifier: Optional[List[Identifier]] = None
    status: Annotated[
        StrictStr, Field(description="The status of this document reference.")
    ]
    docStatus: Annotated[
        Optional[StrictStr], Field(description="The status of the underlying document.")
    ] = None
    type: Annotated[
        Optional[CodeableConcept],
        Field(
            description="Specifies the particular kind of document referenced  (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the document referenced."
        ),
    ] = None
    category: Optional[List[CodeableConcept]] = None
    subject: Annotated[
        Optional[Reference],
        Field(
            description="Who or what the document is about. The document can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure)."
        ),
    ] = None
    date: Annotated[
        Optional[StrictStr],
        Field(description="When the document reference was created."),
    ] = None
    author: Optional[List[Reference]] = None
    authenticator: Annotated[
        Optional[Reference],
        Field(
            description="Which person or organization authenticates that this document is valid."
        ),
    ] = None
    custodian: Annotated[
        Optional[Reference],
        Field(
            description="Identifies the organization or group who is responsible for ongoing maintenance of and access to the document."
        ),
    ] = None
    relatesTo: Optional[List[DocumentReferenceRelatesTo]] = None
    description: Annotated[
        Optional[StrictStr],
        Field(description="Human&ndash;readable description of the source document."),
    ] = None
    securityLabel: Optional[List[CodeableConcept]] = None
    content: Annotated[List[DocumentReferenceContent], Field(min_items=1)]
    context: Annotated[
        Optional[DocumentReferenceContext],
        Field(description="The clinical context in which the document was prepared."),
    ] = None


class OperationOutcome(DomainResource):
    issue: Annotated[List[OperationOutcomeIssue], Field(min_items=1)]


class BundleEntry(BackboneElement):
    link: Optional[List[BundleLink]] = None
    fullUrl: Annotated[
        Optional[StrictStr],
        Field(
            description="The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource &ndash; i.e. if the fullUrl is not a urn:uuid, the URL shall be version&ndash;independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified."
        ),
    ] = None
    resource: Annotated[
        Optional[Resource],
        Field(
            description="The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type."
        ),
    ] = None
    search: Annotated[
        Optional[BundleEntrySearch],
        Field(
            description="Information about the search process that lead to the creation of this entry."
        ),
    ] = None
    request: Annotated[
        Optional[BundleEntryRequest],
        Field(
            description="Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry."
        ),
    ] = None
    response: Annotated[
        Optional[BundleEntryResponse],
        Field(
            description="Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history."
        ),
    ] = None


class BundleEntryResponse(BackboneElement):
    status: Annotated[
        StrictStr,
        Field(
            description="The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code."
        ),
    ]
    location: Annotated[
        Optional[StrictStr],
        Field(
            description="The location header created by processing this operation, populated if the operation returns a location."
        ),
    ] = None
    etag: Annotated[
        Optional[StrictStr],
        Field(
            description="The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency))."
        ),
    ] = None
    lastModified: Annotated[
        Optional[StrictStr],
        Field(
            description="The date/time that the resource was modified on the server."
        ),
    ] = None
    outcome: Annotated[
        Optional[Resource],
        Field(
            description="An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction."
        ),
    ] = None


class BundleEntryRequest(BackboneElement):
    method: Annotated[
        StrictStr,
        Field(
            description="In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred."
        ),
    ]
    url: Annotated[
        StrictStr,
        Field(
            description="The URL for this entry, relative to the root (the address to which the request is posted)."
        ),
    ]
    ifNoneMatch: Annotated[
        Optional[StrictStr],
        Field(
            description='If the ETag values match, return a 304 Not Modified status. See the API documentation for ["Conditional Read"](http.html#cread).'
        ),
    ] = None
    ifModifiedSince: Annotated[
        Optional[StrictStr],
        Field(
            description='Only perform the operation if the last updated date matches. See the API documentation for ["Conditional Read"](http.html#cread).'
        ),
    ] = None
    ifMatch: Annotated[
        Optional[StrictStr],
        Field(
            description='Only perform the operation if the Etag value matches. For more information, see the API section ["Managing Resource Contention"](http.html#concurrency).'
        ),
    ] = None
    ifNoneExist: Annotated[
        Optional[StrictStr],
        Field(
            description='Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for ["Conditional Create"](http.html#ccreate). This is just the query portion of the URL &ndash; what follows the "?" (not including the "?").'
        ),
    ] = None


class BundleEntrySearch(BackboneElement):
    mode: Annotated[
        Optional[StrictStr],
        Field(
            description="Why this entry is in the result set &ndash; whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process."
        ),
    ] = None
    score: Annotated[
        Optional[StrictFloat],
        Field(
            description="When searching, the server's search ranking score for the entry."
        ),
    ] = None


class BundleLink(BackboneElement):
    relation: Annotated[
        StrictStr,
        Field(
            description="A name which details the functional use for this link &ndash; see [http://www.iana.org/assignments/link&ndash;relations/link&ndash;relations.xhtml#link&ndash;relations&ndash;1](http://www.iana.org/assignments/link&ndash;relations/link&ndash;relations.xhtml#link&ndash;relations&ndash;1)."
        ),
    ]
    url: Annotated[StrictStr, Field(description="The reference details for the link.")]


class DocumentReferenceContext(BackboneElement):
    encounter: Optional[List[Reference]] = None
    event: Optional[List[CodeableConcept]] = None
    period: Annotated[
        Optional[Period],
        Field(
            description="The time period over which the service that is described by the document was provided."
        ),
    ] = None
    facilityType: Annotated[
        Optional[CodeableConcept],
        Field(description="The kind of facility where the patient was seen."),
    ] = None
    practiceSetting: Annotated[
        Optional[CodeableConcept],
        Field(
            description="This property may convey specifics about the practice setting where the content was created, often reflecting the clinical specialty."
        ),
    ] = None
    sourcePatientInfo: Annotated[
        Optional[Reference],
        Field(
            description="The Patient Information as known when the document was published. May be a reference to a version specific, or contained."
        ),
    ] = None
    related: Optional[List[Reference]] = None


class DocumentReferenceContent(BackboneElement):
    attachment: Annotated[
        Attachment,
        Field(
            description="The document or URL of the document along with critical metadata to prove content has integrity."
        ),
    ]
    format: Annotated[
        Optional[Coding],
        Field(
            description="An identifier of the document encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType."
        ),
    ] = None


class DocumentReferenceRelatesTo(BackboneElement):
    code: Annotated[
        StrictStr,
        Field(
            description="The type of relationship that this document has with anther document."
        ),
    ]
    target: Annotated[
        Reference, Field(description="The target document of this relationship.")
    ]


class OperationOutcomeIssue(BackboneElement):
    severity: Annotated[
        StrictStr,
        Field(
            description="Indicates whether the issue indicates a variation from successful processing."
        ),
    ]
    code: Annotated[
        StrictStr,
        Field(
            description="Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element."
        ),
    ]
    details: Annotated[
        Optional[CodeableConcept],
        Field(
            description="Additional details about the error. This may be a text description of the error or a system code that identifies the error."
        ),
    ] = None
    diagnostics: Annotated[
        Optional[StrictStr],
        Field(description="Additional diagnostic information about the issue."),
    ] = None
    location: Optional[List[LocationItem]] = None
    expression: Optional[List[ExpressionItem]] = None


class Timing(BackboneElement):
    event: Optional[List[EventItem]] = None
    repeat: Annotated[
        Optional[TimingRepeat],
        Field(description="A set of rules that describe when the event is scheduled."),
    ] = None
    code: Annotated[
        Optional[CodeableConcept],
        Field(
            description="A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
        ),
    ] = None


class TimingRepeat(BackboneElement):
    boundsDuration: Annotated[
        Optional[Duration],
        Field(
            description="Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
        ),
    ] = None
    boundsRange: Annotated[
        Optional[Range],
        Field(
            description="Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
        ),
    ] = None
    boundsPeriod: Annotated[
        Optional[Period],
        Field(
            description="Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
        ),
    ] = None
    count: Annotated[
        Optional[StrictInt],
        Field(
            description="A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
        ),
    ] = None
    countMax: Annotated[
        Optional[StrictInt],
        Field(
            description="If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
        ),
    ] = None
    duration: Annotated[
        Optional[StrictFloat],
        Field(
            description="How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
        ),
    ] = None
    durationMax: Annotated[
        Optional[StrictFloat],
        Field(
            description="If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
        ),
    ] = None
    durationUnit: Annotated[
        Optional[StrictStr],
        Field(description="The units of time for the duration, in UCUM units."),
    ] = None
    frequency: Annotated[
        Optional[StrictInt],
        Field(
            description="The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
        ),
    ] = None
    frequencyMax: Annotated[
        Optional[StrictInt],
        Field(
            description="If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
        ),
    ] = None
    period: Annotated[
        Optional[StrictFloat],
        Field(
            description='Indicates the duration of time over which repetitions are to occur; e.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.'
        ),
    ] = None
    periodMax: Annotated[
        Optional[StrictFloat],
        Field(
            description='If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as "do this once every 3&ndash;5 days.'
        ),
    ] = None
    periodUnit: Annotated[
        Optional[StrictStr],
        Field(description="The units of time for the period in UCUM units."),
    ] = None
    dayOfWeek: Optional[List[DayOfWeekItem]] = None
    timeOfDay: Optional[List[TimeOfDayItem]] = None
    when: Optional[List[WhenItem]] = None
    offset: Annotated[
        Optional[StrictInt],
        Field(
            description="The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
        ),
    ] = None


class Age(Quantity):
    pass


class Count(Quantity):
    pass


class Distance(Quantity):
    pass


class Duration(Quantity):
    pass


class MoneyQuantity(Quantity):
    pass


class SimpleQuantity(Quantity):
    pass


Resource.update_forward_refs()
Element.update_forward_refs()
DomainResource.update_forward_refs()
Bundle.update_forward_refs()
BackboneElement.update_forward_refs()
Address.update_forward_refs()
Annotation.update_forward_refs()
Attachment.update_forward_refs()
CodeableConcept.update_forward_refs()
Coding.update_forward_refs()
ContactPoint.update_forward_refs()
HumanName.update_forward_refs()
Identifier.update_forward_refs()
Money.update_forward_refs()
Period.update_forward_refs()
Quantity.update_forward_refs()
Range.update_forward_refs()
Ratio.update_forward_refs()
Reference.update_forward_refs()
SampledData.update_forward_refs()
Signature.update_forward_refs()
ContactDetail.update_forward_refs()
RelatedArtifact.update_forward_refs()
UsageContext.update_forward_refs()
Meta.update_forward_refs()
Narrative.update_forward_refs()
Extension.update_forward_refs()
DocumentReference.update_forward_refs()
OperationOutcome.update_forward_refs()
BundleEntry.update_forward_refs()
BundleEntryResponse.update_forward_refs()
BundleEntryRequest.update_forward_refs()
BundleEntrySearch.update_forward_refs()
BundleLink.update_forward_refs()
DocumentReferenceContext.update_forward_refs()
DocumentReferenceContent.update_forward_refs()
DocumentReferenceRelatesTo.update_forward_refs()
OperationOutcomeIssue.update_forward_refs()
Timing.update_forward_refs()
TimingRepeat.update_forward_refs()
Age.update_forward_refs()
Count.update_forward_refs()
Distance.update_forward_refs()
Duration.update_forward_refs()
MoneyQuantity.update_forward_refs()
SimpleQuantity.update_forward_refs()
