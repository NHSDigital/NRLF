from enum import Enum


class LogReference(Enum):
    OPERATION = "Executing pipeline steps"
    VERSION_CHECK = "Getting version from header"
    STATUS001 = "Getting environmental variables config"
    STATUS003 = "Hitting the database"
    COMMONSEARCH001 = "Searching for document references"
    COMMON001 = "Parsing headers"
    COMMON002 = "Parse document pointer id"
    DATA_CONTRACT_READ_CACHE = "Getting cached Data Contracts"
    DATA_CONTRACT_WRITE_CACHE = "Caching Data Contracts"
    REPOSITORY001 = "Checking if record is valid"
    REPOSITORY002 = "Querying document"
    COMMON_PRODUCER_VALIDATE_PERMISSIONS = "Validating producer permissions"
    COMMON_PRODUCER_APPLY_CONTRACT = "Applying JSON Schema validator"
    AUTHORISER001 = "Parsing headers"
    AUTHORISER002 = "Parsing pointer types"
    AUTHORISER003 = "Reading pointer types from S3"
    AUTHORISER004 = "Validating pointer types"
    AUTHORISER005 = "Render authorisation response"
    AUTHORISER006 = "Parsing Client RP Details"
    FIREHOSEMODEL001 = "Parsing Cloudwatch Logs Event"
    FIREHOSE001 = "Processing all Firehose records"
    FIREHOSE002 = "Executing handler"
    FIREHOSE003 = "Resubmitting unprocessed records to Kinesis/Firehose"
    FIREHOSE004 = (
        "Verifying that size of the processed record is "
        "compatible with the maximum packet size for Kinesis"
    )
    FIREHOSE005 = "Determining Firehose outcome based on the size of this record"
    FIREHOSE006 = (
        "Processing individual Cloudwatch Logs record "
        "(which may contain multiple log entries)"
    )
    FIREHOSE007 = "Joining Splunk logs"
    PARSE_EVENT = "Parsing S3 bucket and key from event"
    READ_BODY = "Reading event body from S3 bucket and key"
    PARSE_BODY = "Parsing event body as JSON"
    IS_ERROR_EVENT = "Checking whether this is a true error event"
    SEND_NOTIFICATION = "Sending notification"
    SEARCHPOST001 = "Searching for document references"
    CREATE_REQUEST = "Parsing request body"
    CREATE_SUPERSEDE_CHECK = "Determining whether document reference will supersede"
    CREATE_VALIDATE_SUPERSEDE = "Validating ok to supersede"
    CREATE_SUPERSEDING = "Mark the document for superseding"
    CREATE_PERMISSIONS = "Validating producer permissions"
    CREATE_PERSIST_TO_DB = "Saving document pointer to db"
    DELETE001 = "Validating producer permissions"
    DELETE002 = "Validating item exists for deletion"
    DELETE003 = "Deleting document reference"
    READ001 = "Validating producer permissions"
    READ002 = "Reading document reference"
    UPDATE001 = "Parsing request body"
    UPDATE002 = "Determining whether document pointer exists"
    UPDATE003 = "Comparing immutable fields"
    UPDATE004 = "Updating document pointer model in db"
    SEARCH001 = "Searching for document references"
    SEED001 = "Ensuring that this is a sandbox environment"
    SEED00X = "Seeding table"
    SEEDVALIDATE001 = "Validating item"
