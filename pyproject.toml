[tool.poetry]
name = "nrlf-api"
version = "1.0.0"
description = ""
authors = ["NHS Digital"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "1.10.12"
nhs-number = "1.3.4"
aws-lambda-powertools = "^2.35.1"
requests = "^2.31.0"
boto3-stubs = {extras = ["dynamodb", "firehose", "kinesis", "lambda", "rds", "s3"], version = "^1.34.140"}
pyjwt = "^2.8.0"

[tool.poetry.group.dev.dependencies]
layers = {path = "layer", develop = true}
nrlf-converter = {url = "https://github.com/NHSDigital/nrlf-converter/releases/download/0.0.9/nrlf_converter-0.0.9-py3-none-any.whl"}
pytest = "^8.1.1"
pytest-mock = "^3.12.0"
pytest-cov = "^5.0.0"
boto3 = "^1.34.60"
sh = "^2.0.6"
moto = {extras = ["dynamodb", "s3"], version = "^5.0.5"}
behave = "^1.2.6"
pyyaml = "^6.0.1"
datamodel-code-generator = "^0.25.4"
pre-commit = "^3.6.2"
ruff = "^0.3.2"
fire = "^0.6.0"
gherkin-official = "^28.0.0"
allure-pytest = "^2.13.5"
allure-behave = "^2.13.3"
freezegun = "^1.4.0"
pytest-env = "^1.1.3"
matplotlib = "^3.8.4"
freeze-uuid = "^0.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.sqlfluff.core]
dialect = "postgres"

[tool.sqlfluff.rules.capitalisation.identifiers]
capitalisation_policy = "consistent"

[tool.pytest.ini_optons]
addopts = "-v --cov=layer/nrlf/nrlf --cov-report=term-missing --cov-branch"


[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E", # Pycodestyle Error
    "W", # Pycodestyle Warning
    "F", # Pyflakes
    "I", # isort
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT", # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "PL", # pylint
    "PERF", # perflint
]
ignore = [
    "E501", # line too long
    "PLR2004" # Magic values
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "conftest.py"
]

[tool.pytest.ini_options]
env = [
    "D:AWS_REGION=eu-west-2",
    "D:AWS_DEFAULT_REGION=eu-west-2",
    "D:ENVIRONMENT=pytest",
    "PREFIX=nrlf",
    "SPLUNK_INDEX=logs",
    "SOURCE=app",
    "AUTH_STORE=auth-store",
    "TABLE_NAME=unit-test-document-pointer"
]
pythonpath = [".", "./scripts"]
